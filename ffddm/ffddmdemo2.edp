// ff-mpirun -np 2 ffddmdemo2.edp -wg 

macro dimension 2// EOM            // 2D or 3D

include "ffddm.idp"

mesh ThGlobal = square(100,100);    // global mesh

// Step 1: Decompose the mesh
ffddmbuildDmesh( M , ThGlobal , mpiCommWorld )

// Step 2: Define your finite element
macro def(u)  u // EOM
macro init(u) u // EOM
ffddmbuildDfespace( FE , M , real , def , init , P2 )

// Step 3: Define your problem
macro grad(u) [dx(u), dy(u)] // EOM
macro Varf(varfName, meshName, VhName)
    varf varfName(u,v) = int2d(meshName)(grad(u)'* grad(v))
                       + int2d(meshName)(1*v) + on(1, u = 0);  // EOM
ffddmsetupOperator( PB , FE , Varf )

FEVhi ui, bi;
ffddmbuildrhs( PB , Varf , bi[] )

/*ui[] = PBA(bi[]);
ffddmplot(FE, ui, "A*b")*/

ui[] = PBdirectsolve(bi[]);
ffddmplot(FE, ui, "u")